1) В каждом запросе гарантированно будет json, содержащий структуру проекта (structure) в виде названия проекта (name) и списка путей до файлов от корня (files),
список файлов, которые были изменены (changed), также в виде списка путей (files):
{
  "structure": {
    "name": "math-app",
    "files": [
      "cmd/server/main.go",
      "internal/transport/rest/handler.go",
      "internal/transport/rest/router.go",
      "internal/service/task_service.go",
      "internal/storage/task_repository.go",
      "go.mod"
    ]
  },
  "changed": {
    "files": [
    "internal/transport/rest/router.go",
    "internal/service/task_service.go"
    ]
  },
  "documentation": [
    "docs/transport/transportation_guide.md",
  ]
}
 
2) Чтобы получить содердимое файла нужно использовать get_file, указав путь до него от корневой папки (как в structure)
3) Если передан documentation, значит, в этих файлах изменилась документация.
В этом случае надо найти фичи, что могли измениться или добавиться, ТОЛЬКО ИХ, а НЕ ВСЕ фичи проекта.
3) Если готов дать ответ, присылай json со структурой фичей как в примере:
[
    {
        "name": "Рендеринг",
        "children": [
            {
                "name": "API v2"
            }
        ]
    },
    {
        "name": "Управление релизами",
        "children": [
            {
                "name": "Работа с релизами (v2)",
                "children": [
                    {
                       "name": "Расчет разницы между релизами",
                       "children": []
                    }
                ]
            }
        ]
    }
]
